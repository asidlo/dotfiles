# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd 
setopt extendedglob 
setopt nomatch 
setopt notify 
setopt auto_pushd 
setopt pushd_ignore_dups 
setopt pushd_silent 
setopt pushd_to_home
setopt append_history 
setopt hist_ignore_all_dups
setopt hist_reduce_blanks
setopt hist_verify 
setopt inc_append_history
setopt share_history 
setopt hist_ignore_space
setopt bang_hist
unsetopt hist_ignore_space
setopt chase_links
setopt correct
setopt extended_glob
setopt glob_dots
unsetopt rm_star_silent
unsetopt beep
bindkey -e

zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors 'di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'

# compinit only once per day to speed up terminal load time
# https://gist.github.com/ctechols/ca1035271ad134841284#gistcomment-2767420
autoload -Uz compinit
for dump in $HOME/.zcompdump(#qN.m1); do
	compinit
	if [[ -s "$dump" && (! -s "$dump.zwc" || "$dump" -nt "$dump.zwc") ]]; then
		zcompile "$dump"
	fi
done
compinit -C

# load colors and allows in prompt
# autoload -U colors && colors
# setopt prompt_subst

# Profiling tools for measuring zsh startup times
# zmodload zsh/zprof

# autoload -Uz vcs_info
# zstyle ':vcs_info:*' enable git
# zstyle ':vcs_info:*' actionformats " on %{$fg[green]%}%b%{$reset_color%} (%{$fg[red]%}%a%{$reset_color%})"
# zstyle ':vcs_info:git*' formats " on %{$fg[green]%}%b%{$reset_color%}"

# precmd() { vcs_info }

if ! (( $+commands[antibody] )); then
	echo "Installing antibody plugin manager"
	sudo curl -sfL git.io/antibody | sudo sh -s - -b /usr/local/bin
fi
source <(antibody init)
antibody bundle zsh-users/zsh-syntax-highlighting
antibody bundle zsh-users/zsh-history-substring-search
antibody bundle zsh-users/zsh-autosuggestions

# PROMPT='%{$fg[cyan]%}%n%{$reset_color%}'                             # USERNAME
# PROMPT+=' at %{$fg[magenta]%}%m%{$reset_color%}'                     # at HOSTNAME
# PROMPT+=' in %{$fg[blue]%}%~%u%{$reset_color%}'                      # in DIRECTORY
# PROMPT+='${vcs_info_msg_0_}'

# PROMPT+=$'\n'                                                        # newline
# PROMPT+='%(?.%{$fg[white]%}.%{$fg[red]%})%(!.#.%%)%{$reset_color%} ' # % (red if error white otherwise)

[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.zsh
[ -f /etc/bash_completion.d/azure-cli ] && source /etc/bash_completion.d/azure-cli

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"

if ! (( $+commands[starship] )); then
	echo "Installing starship shell prompt"
	sh -c "$(curl -fsSL https://starship.rs/install.sh)"
fi
eval "$(starship init zsh)"
