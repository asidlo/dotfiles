# https://joshdick.net/2017/06/08/my_git_prompt_for_zsh_revisited.html
setopt prompt_subst
autoload -U colors && colors # Enable colors in prompt

# Echoes a username/host string when connected over SSH (empty otherwise)
ssh_info() {
  [[ "$SSH_CONNECTION" != '' ]] && echo '%(!.%{$fg[red]%}.%{$fg[yellow]%})%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%}:' || echo ''
}

git_branch() {
  # Exit if not inside a Git repository
  ! git rev-parse --is-inside-work-tree > /dev/null 2>&1 && return

  # Git branch/tag, or name-rev if on detached head
  local GIT_LOCATION=${$(git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD)#(refs/heads/|tags/)}

  # Add the branch icon and the branch name
  local -a GIT_INFO
  # GIT_INFO+=( "\033[38;5;15m(" )
  GIT_INFO+=( "\033[38;5;15m($GIT_LOCATION)%{$reset_color%}" )
  echo "${(j: :)GIT_INFO}"
}

# Echoes information about Git repository status when inside a Git repository
git_info() {

  # Exit if not inside a Git repository
  ! git rev-parse --is-inside-work-tree > /dev/null 2>&1 && return

  # Git branch/tag, or name-rev if on detached head
  local GIT_LOCATION=${$(git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD)#(refs/heads/|tags/)}

  local AHEAD="%{$fg[red]%}⇡NUM%{$reset_color%}"
  local BEHIND="%{$fg[cyan]%}⇣NUM%{$reset_color%}"
  local MERGING="%{$fg[magenta]%}⚡︎%{$reset_color%}"
  local UNTRACKED="%{$fg[red]%}●%{$reset_color%}"
  local MODIFIED="%{$fg[yellow]%}●%{$reset_color%}"
  local STAGED="%{$fg[green]%}●%{$reset_color%}"

  local -a DIVERGENCES
  local -a FLAGS

  local NUM_AHEAD="$(git log --oneline @{u}.. 2> /dev/null | wc -l | tr -d ' ')"
  if [ "$NUM_AHEAD" -gt 0 ]; then
    DIVERGENCES+=( "${AHEAD//NUM/$NUM_AHEAD}" )
  fi

  local NUM_BEHIND="$(git log --oneline ..@{u} 2> /dev/null | wc -l | tr -d ' ')"
  if [ "$NUM_BEHIND" -gt 0 ]; then
    DIVERGENCES+=( "${BEHIND//NUM/$NUM_BEHIND}" )
  fi

  local GIT_DIR="$(git rev-parse --git-dir 2> /dev/null)"
  if [ -n $GIT_DIR ] && test -r $GIT_DIR/MERGE_HEAD; then
    FLAGS+=( "$MERGING" )
  fi

  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    FLAGS+=( "$UNTRACKED" )
  fi

  if ! git diff --quiet 2> /dev/null; then
    FLAGS+=( "$MODIFIED" )
  fi

  if ! git diff --cached --quiet 2> /dev/null; then
    FLAGS+=( "$STAGED" )
  fi

  local -a GIT_INFO
  GIT_INFO+=( "\033[38;5;15m±" )
  [ -n "$GIT_STATUS" ] && GIT_INFO+=( "$GIT_STATUS" )
  [[ ${#DIVERGENCES[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)DIVERGENCES}" )
  [[ ${#FLAGS[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)FLAGS}" )
  GIT_INFO+=( "\033[38;5;15m$GIT_LOCATION%{$reset_color%}" )
  echo "${(j: :)GIT_INFO}"

}

# Use % as the non-root prompt character; # for root
# Change the prompt character color if the last command had a nonzero exit code
PS1='%{$fg[cyan]%}%n%{$reset_color%} at %{$fg[magenta]%}%m%{$reset_color%} in %{$fg[blue]%}%~%u $(git_branch)
%(?.%{$fg[white]%}.%{$fg[red]%})%(!.#.%%)%{$reset_color%} '

export PATH=$PATH:/usr/local/bin

source <(antibody init)
antibody bundle < ~/.zsh_plugins.txt

# Fix for wsl setting umask to 0000
if test umask = '0000'; then
  umask 022
fi

if test $(uname) = 'Darwin'; then
  alias ls='ls -G'
else
  alias ls='ls --color=auto'
fi
alias ll='ls -alF'
alias la='ls -A'
alias grep='grep --color=auto'
alias cls='clear'
alias tree='tree -C'

export VISUAL=nvim
export EDITOR=nvim
export FD_OPTS='--follow --exclude .git --exclude node_modules'
export FZF_DEFAULT_COMMAND="git ls-files --cached --others --exclude-standard 2> /dev/null | fd --type f --type l $FD_OPTS"
export FZF_CTRL_T_COMMAND=$FZF_DEFAULT_COMMAND
export FZF_ALT_C_COMMAND="fd --type d $FD_OPTS"
export FZF_DEFAULT_OPTS='
  --color=fg:#c2bebe,bg:0,hl:#8be9fd
  --color=fg+:#f8f8f2,bg+:0,hl+:#ff79c6
  --color=info:#bd93f9,prompt:#ff79c6,pointer:#ff79c6
  --color=marker:#50fa7b,spinner:#8be9fd,header:#f1fa8c
  --height 50% -1 --reverse --multi --inline-info
  --preview="bat --color=always --style=numbers {}"
  --preview-window="right:hidden"
  --bind="F2:toggle-preview"
  --bind="ctrl-d:half-page-down"
  --bind="ctrl-u:half-page-up"
  --bind="ctrl-a:select-all+accept"
  --bind="ctrl-y:execute-silent(echo {+} | copy)"
'

# Abbreviations using plugin 'momo-lab/zsh-abbrev-alias'
abbrev-alias -g g='git'
abbrev-alias -g py='python'
abbrev-alias -g py3='python3'
abbrev-alias -g confe="$EDITOR ~/.vimrc"

# Completions
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Platform specific vars, exports, etc should be done via ~/.zshenv
