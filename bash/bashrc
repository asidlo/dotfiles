# Add this lines at the top of .bashrc:
[[ $- == *i* ]] && [ -f ~/.local/share/blesh/ble.sh ] && source ~/.local/share/blesh/ble.sh --noattach

bind 'set completion-ignore-case on'
bind 'set show-all-if-ambiguous on'
bind 'set menu-complete-display-prefix on'
bind 'TAB: menu-complete'

stty -ixon

# get current branch in git repo
function parse_git_branch() {
    BRANCH=$(git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [ ! "${BRANCH}" == "" ]; then
        STAT=$(parse_git_dirty)
        echo "[${BRANCH}${STAT}]"
    else
        echo ""
    fi
}

# get current status of git repo
function parse_git_dirty {
    status=$(git status 2>&1 | tee)
    dirty=$(
        echo -n "${status}" 2>/dev/null | grep "modified:" &>/dev/null
        echo "$?"
    )
    untracked=$(
        echo -n "${status}" 2>/dev/null | grep "Untracked files" &>/dev/null
        echo "$?"
    )
    ahead=$(
        echo -n "${status}" 2>/dev/null | grep "Your branch is ahead of" &>/dev/null
        echo "$?"
    )
    newfile=$(
        echo -n "${status}" 2>/dev/null | grep "new file:" &>/dev/null
        echo "$?"
    )
    renamed=$(
        echo -n "${status}" 2>/dev/null | grep "renamed:" &>/dev/null
        echo "$?"
    )
    deleted=$(
        echo -n "${status}" 2>/dev/null | grep "deleted:" &>/dev/null
        echo "$?"
    )
    bits=''
    if [ "${renamed}" == "0" ]; then
        bits=">${bits}"
    fi
    if [ "${ahead}" == "0" ]; then
        bits="*${bits}"
    fi
    if [ "${newfile}" == "0" ]; then
        bits="+${bits}"
    fi
    if [ "${untracked}" == "0" ]; then
        bits="?${bits}"
    fi
    if [ "${deleted}" == "0" ]; then
        bits="x${bits}"
    fi
    if [ "${dirty}" == "0" ]; then
        bits="!${bits}"
    fi
    if [ ! "${bits}" == "" ]; then
        echo " ${bits}"
    else
        echo ""
    fi
}

# Check if starship is installed, if so then use instead
# Check if starship is installed and if so then eval it
if command -v starship &>/dev/null; then
    eval "$(starship init bash)"
else
    # Check if using git bash on windows, use optimized function instead
    if [[ $(type -t __git_ps1) == function ]]; then
        export PS1="\[\e[36m\]\u\[\e[m\] at \[\e[35m\]\h\[\e[m\] in \[\e[34m\]\w\[\e[m\]\`__git_ps1\`\n$ "
    else
        export PS1="\[\e[36m\]\u\[\e[m\] at \[\e[35m\]\h\[\e[m\] in \[\e[34m\]\w\[\e[m\] \`parse_git_branch\`\n$ "
    fi
fi

alias ls="ls -G --color=auto"
alias ll="ls -l"
alias la="ls -al"
alias grep="grep --color"

export PATH=$PATH:/usr/local/bin

export FZF_DEFAULT_OPTS='
    --color=fg:#c2bebe,bg:#282a36,hl:#8be9fd
    --color=fg+:#f8f8f2,bg+:#282a36,hl+:#ff79c6
    --color=info:#bd93f9,prompt:#ff79c6,pointer:#ff79c6
    --color=marker:#50fa7b,spinner:#8be9fd,header:#f1fa8c
    --height 50% -1 --reverse --multi --inline-info
    --preview-window="right:hidden"
    --preview="bat --style=numbers --color=always {}"
    --bind="F1:execute($EDITOR {})"
    --bind="F2:toggle-preview"
    --bind="ctrl-d:half-page-down"
    --bind="ctrl-u:half-page-up"
    --bind="ctrl-a:select-all+accept"
    --bind="ctrl-y:execute-silent(echo {+} | pbcopy)"
'

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash

# Add this line at the end of .bashrc:
[[ ! ${BLE_VERSION-} ]] || ble-attach
