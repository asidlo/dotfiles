###############################################################################
# Git Notes
###############################################################################
; Grep the git messages for the following term and show the commit hash, adding
; %s would also show the message.
;
; $ git log --pretty="format:%h" --reverse --grep=US17593 -i origin/FE2389
;
; Undo all of the commits and restage the changes to make different
; micro-commits
;
; $ git reset --soft HEAD~2
;
; Change the git commit history (ordering, messages, squash, etc) Rebase the
; commits onto the provided hash from HEAD.
;
; $ git rebase -i hash
;
; Commit using the same commit message from another commit
;
; $ git commit -C a45kj23bf
;
; View a file from a particular commit
;
; $ git show 23sdwjb4g4:source/share/java/com/.../NodeInventory.java > file
;
; Display commits since (and not including) another commit
;
; $ git log master-next..HEAD --pretty="format:%h" --reverse
;
; Get all changed files in a commit
;
; (plumbing) $ git diff-tree --no-commit-id --name-only -r wefwjken3f3
; (porcelain)$ git show --pretty="" --name-only wkejf3j2fj
;   > Could use --no-pager so output isnt paged
###############################################################################
[user]
  name = asidlo
  email = sidlo.andrew@gmail.com
[core]
  preloadindex = true
  fscache = true
  editor = nvim
  excludesfile = ~/.gitignore
  pager = diff-so-fancy | less --tabs=4 -RFX
[log]
  # 2019-02-05 11:53:12 -0500
  date = iso
[branch]
  # Automatically rebase to remove merged commit message on pull
  autosetuprebase = always
[commit]
  verbose = true
[diff]
  tool = vimdiff
[difftool]
  prompt = 0
[alias]
  a = add
  au = add -u # Update all tracked files
  aa = add -A # Add all files to staging

  b = branch

  co = checkout
  cob = checkout -b

  c = commit
  ca = commit --amend
  can = commit --amend --no-edit
  cmsg = commit -m

  d = diff
  ds = diff --stat
  dh = diff HEAD
  dhs = diff HEAD --stat

  # l = log
  # o = oneline
  # d = date [r = relative, s = short]
  # a = author
  l = log
  lo = log --oneline
  loa = log --oneline --decorate --pretty='* %C(auto)%h%Creset %C(auto)%d%Creset %s %C(bold blue)<%an>%Creset'
  lod = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s'
  lodr = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s' --date=relative
  lods = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s' --date=short
  load = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s %C(bold blue)<%an>%Creset'
  loadr = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s %C(bold blue)<%an>%Creset' --date=relative
  loads = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s %C(bold blue)<%an>%Creset' --date=short

  # g = graph
  lg = log --graph
  lgo = log --graph --oneline
  lgod = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad)'
  lgods = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad)' --date=short
  lgodr = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad)' --date=relative
  lgoad = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'
  lgoads = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short
  lgoadr = log --graph --pretty='%C(auto)%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=relative

  s = status
  ss = status -s

  # standup - last 1 week written by me
  sup = log --oneline --decorate --pretty='* %C(auto)%h%Creset %Cgreen(%ad)%C(auto)%d%Creset %s %C(bold blue)<%an>%Creset' --date=relative --since='1 week' --author sidlo.andrew@gmail.com

  # Get all aliases defined in gitconfig
  alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

[diff-so-fancy]
  markEmptyLines = false
  stripLeadingSymbols = false
[color "diff"]
  commit = yellow bold
[color]
  ui = true
