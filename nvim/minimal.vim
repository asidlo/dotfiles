if empty(glob(stdpath('data') . '/site/autoload/plug.vim'))
  silent execute '!curl -fLo ' . expand(stdpath('data') . '/site/autoload/plug.vim') . ' --create-dirs ' .
    \ 'https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin(expand(stdpath('data') . '/plugged'))
  Plug 'dracula/vim', { 'as': 'dracula' }
call plug#end()

set smartindent
set expandtab
set relativenumber
set splitbelow
set splitright
set termguicolors
set nomodeline
set autowriteall
set nobackup
set nowritebackup
set noswapfile
set linebreak
set smartcase
set undofile

set textwidth=119
set mouse=a
set tabstop=4
set shiftwidth=4
set completeopt=menuone,longest,preview

" Look for tags file in current buffer dir, then in the current dir, then use stdlibs
" Generated by using the following:
" $ ctags -R -f ~/.local/share/nvim/include/systags /usr/include /usr/local/include
set tags=./tags,tags,~/.local/share/nvim/include/systags

" Yank from current position till eol, similar to C and D
nnoremap Y y$

let g:netrw_dirhistmax = 0
let g:netrw_banner = 0
let g:netrw_winsize = 25
let g:netrw_liststyle = 3

try
  let g:dracula_inverse = 0
  colorscheme dracula
catch
  colorscheme default
endtry

augroup dracula_customization
  autocmd!
  autocmd ColorScheme dracula highlight SpellBad gui=undercurl
  autocmd ColorScheme dracula highlight Search
        \ guibg=NONE guifg=Yellow
        \ gui=underline term=underline cterm=underline
augroup END

augroup filetype_settings
  autocmd!
  autocmd FileType vim setlocal tabstop=2 shiftwidth=2
  autocmd FileType c 
        \ setlocal tabstop=8 shiftwidth=8 noexpandtab 
        \ formatprg=clang-format\ -style=Microsoft
        \ textwidth=80
  autocmd FileType markdown setlocal textwidth=79
  autocmd TermOpen,BufEnter term://* startinsert!
  autocmd TermOpen,BufEnter term://* setlocal nonumber norelativenumber
augroup END
